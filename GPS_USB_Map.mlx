% Clear the command window and close any open serial ports
clc;
clear;
close all;
delete(serialportfind);

% Specify the serial port settings
serialPortName = "/dev/tty.usbmodem1101";  % Replace with the appropriate serial port
baudRate = 9600;                           % Replace with the baud rate of your GPS dongle
timeout = 10;                              % Timeout in seconds

try
    % Create a serialport object
    serialportObj = serialport(serialPortName, baudRate);
    
    % Set the timeout for reading data
    serialportObj.Timeout = timeout;
    
    % Open the serial port
    fopen(serialportObj);
    
    % Read and parse GPS data
    while true
        % Read a line of data from the serial port
        try
            gpsData = readline(serialportObj);
            
            % Parse the NMEA sentence
            if startsWith(gpsData, '$GPRMC')
                fields = split(gpsData, ',');
                latitude = str2double(fields{4}(1:2)) + str2double(fields{4}(3:end))/60;
                if fields{5} == 'S'
                    latitude = -latitude;
                end
                longitude = str2double(fields{6}(1:3)) + str2double(fields{6}(4:end))/60;
                if fields{7} == 'W'
                    longitude = -longitude;
                end
                
                % Reverse geocode the GPS coordinates using OpenStreetMap Nominatim API
                url = sprintf('https://nominatim.openstreetmap.org/reverse?format=json&lat=%f&lon=%f', latitude, longitude);
                data = webread(url);
                
                % Extract the address from the API response
                address = data.display_name;
                
                % Create a map centered on the GPS coordinates
                figure;
                geoscatter(latitude, longitude, 'r', 'filled');
                geobasemap('topographic');
                
                % Set the map title to the nearest address
                title(address, 'FontSize', 14, 'FontWeight', 'bold');
                
                % Close the serial port and delete the serialport object
                fclose(serialportObj);
                delete(serialportObj);
                clear serialportObj;
                
                % End the script
                return;
            end
            
        catch err
            if strcmp(err.identifier, 'MATLAB:serial:fread:unsuccessfulRead')
                disp('Timeout occurred while reading data from the serial port.');
                break;
            else
                rethrow(err);
            end
        end
    end
    
catch err
    disp(['Error: ' err.message]);
    
    % Close the serial port if it was opened
    if isvalid(serialportObj)
        fclose(serialportObj);
        delete(serialportObj);
        clear serialportObj;
    end
end